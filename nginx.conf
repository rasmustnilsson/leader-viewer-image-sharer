events {
    worker_connections 1024;
}

http {
    log_format  main  '$remote_addr - $remote_user [$time_local] '
                      '"$request" $status $body_bytes_sent '
                      '"$http_referer" "$http_user_agent"';

    upstream nextjs {
        server nextjs:3000;
    }

    upstream websocket {
        server websocket:3001;
    }

    # HTTP server: handles ACME challenge & redirect to HTTPS
    server {
        listen 80;
        server_name rasmusnilsson.com www.rasmusnilsson.com;
        # all other requests â†’ HTTPS
        location / {
            return 301 https://$host$request_uri;
        }
    }

    # HTTPS server: terminate TLS
    server {
        listen 443 ssl http2;
        server_name rasmusnilsson.com www.rasmusnilsson.com;

        # paths to certs issued by certbot
        ssl_certificate     /etc/letsencrypt/live/rasmusnilsson.com/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/rasmusnilsson.com/privkey.pem;
        ssl_protocols       TLSv1.2 TLSv1.3;
        ssl_prefer_server_ciphers on;

        # Next.js app
        location / {
            proxy_pass            http://nextjs;
            proxy_http_version    1.1;
            proxy_set_header      Upgrade $http_upgrade;
            proxy_set_header      Connection 'upgrade';
            proxy_set_header      Host $host;
            proxy_cache_bypass    $http_upgrade;
        }

        # WebSocket endpoint
        location /ws {
            proxy_pass            http://websocket;
            proxy_http_version    1.1;
            proxy_set_header      Upgrade $http_upgrade;
            proxy_set_header      Connection "Upgrade";
            proxy_set_header      Host $host;
        }
    }
}
